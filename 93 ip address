import java.util.*;

class Solution {
    public List<String> restoreIpAddresses(String s) {
        List<String> result = new ArrayList<>();
        backtrack(s, 0, new ArrayList<>(), result);
        return result;
    }

    private void backtrack(String s, int index, List<String> parts, List<String> result) {
        // If we have 4 parts and used all digits, add to result
        if (parts.size() == 4 && index == s.length()) {
            result.add(String.join(".", parts));
            return;
        }

        // If we already have 4 parts but not used all digits
        if (parts.size() == 4) return;

        // Try parts of length 1 to 3
        for (int len = 1; len <= 3 && index + len <= s.length(); len++) {
            String part = s.substring(index, index + len);

            // Check if valid (no leading zeros unless "0", and <= 255)
            if ((part.startsWith("0") && part.length() > 1) || Integer.parseInt(part) > 255)
                continue;

            parts.add(part);
            backtrack(s, index + len, parts, result);
            parts.remove(parts.size() - 1); // backtrack
        }
    }
}
